{"version":3,"file":"static/js/558.f02b6e82.chunk.js","mappings":"sMAqEA,UAjEA,WACE,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,EAAc,IAAIC,gBAAgBH,EAASI,QAAQC,IAAI,UAE7D,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAsCF,EAAAA,EAAAA,UAASJ,GAAe,IAA9D,eAAOO,EAAP,KAAoBC,EAApB,KA+BA,OA7BAC,EAAAA,EAAAA,YAAU,WACJF,EACFG,EAAAA,EAAAA,IAAA,mGAAsGH,IACnGI,MAAK,SAAAC,GACJN,EAAUM,EAASC,KAAKC,QACzB,IACAC,OAAM,SAAAC,GACLC,QAAQD,MAAM,yBAA0BA,EACzC,IAEHN,EAAAA,EAAAA,IAAU,wFACPC,MAAK,SAAAC,GACJN,EAAUM,EAASC,KAAKC,QACzB,IACAC,OAAM,SAAAC,GACLC,QAAQD,MAAM,yBAA0BA,EACzC,GAEN,GAAE,CAACT,KAYF,4BACE,0BACE,SAAC,KAAD,CAASW,GAAG,IAAIC,gBAAgB,aAAhC,qBAEF,0BACE,SAAC,KAAD,CAASD,GAAG,kCAAkCC,gBAAgB,aAA9D,uBAEF,2CACA,2BACE,kBAAOC,KAAK,OAAOC,MAAOd,EAAae,SAnBxB,SAACC,GACpBA,EAAMC,iBACN,IAAMC,EAAiBF,EAAMG,OAAOL,MACpCb,EAAeiB,GAEf7B,EAAS,kBAAD,OAAmB6B,GAC5B,EAaoEE,YAAY,0BAE7E,wBACGtB,EAAWuB,KAAI,SAAAC,GAAK,OACnB,yBACE,UAAC,KAAD,CAAMX,GAAE,kBAAaW,EAAMC,IAAMC,MAAO,CAAE7B,OAAQK,GAAlD,WACE,gBAAKyB,IAAG,0CAAqCH,EAAMI,aAAeC,IAAKL,EAAMM,SAC7E,wBAAKN,EAAMM,SACX,uBAAIN,EAAMO,eAJLP,EAAMC,GADI,QAY5B,C","sources":["components/Movies.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link, NavLink, useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction Movies() {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const searchParam = new URLSearchParams(location.search).get('search');\n  \n  const [moviesData, setMovies] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(searchParam || '');\n\n  useEffect(() => {\n    if (searchQuery) {\n      axios.get(`https://api.themoviedb.org/3/search/movie?api_key=b1d75cfaae6b922289a72c3eab080e3a&query=${searchQuery}`)\n        .then(response => {\n          setMovies(response.data.results);\n        })\n        .catch(error => {\n          console.error('Error fetching movies:', error);\n        });\n    } else {\n      axios.get('https://api.themoviedb.org/3/discover/movie?api_key=b1d75cfaae6b922289a72c3eab080e3a')\n        .then(response => {\n          setMovies(response.data.results);\n        })\n        .catch(error => {\n          console.error('Error fetching movies:', error);\n        });\n    }\n  }, [searchQuery]);\n\n  const handleSearch = (event) => {\n    event.preventDefault();\n    const newSearchQuery = event.target.value;\n    setSearchQuery(newSearchQuery);\n\n    navigate(`/movies?search=${newSearchQuery}`);\n  };\n\n\n  return (\n    <div>\n      <div>\n        <NavLink to=\"/\" activeClassName=\"activelink\">Home</NavLink>\n      </div>\n      <div>\n        <NavLink to=\"/goit-react-hw-05-movies/movies\" activeClassName=\"activelink\">Movies</NavLink>\n      </div>\n      <h2>Search Movies</h2>\n      <form>\n        <input type=\"text\" value={searchQuery} onChange={handleSearch} placeholder=\"Search for a movie\" />\n      </form>\n      <ul>\n        {moviesData.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ search: searchQuery }}>\n              <img src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`} alt={movie.title} />\n              <h3>{movie.title}</h3>\n              <p>{movie.overview}</p>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\n\nexport default Movies;\n"],"names":["navigate","useNavigate","location","useLocation","searchParam","URLSearchParams","search","get","useState","moviesData","setMovies","searchQuery","setSearchQuery","useEffect","axios","then","response","data","results","catch","error","console","to","activeClassName","type","value","onChange","event","preventDefault","newSearchQuery","target","placeholder","map","movie","id","state","src","poster_path","alt","title","overview"],"sourceRoot":""}