{"version":3,"file":"static/js/789.57b6fade.chunk.js","mappings":"0NACA,EAA4B,wBAA5B,EAA+D,uBAA/D,EAAiG,uBAAjG,EAAqI,yBAArI,EAA0K,wBAA1K,EAAmN,6BAAnN,EAA2P,uB,SC2C3P,MAtCA,YAA4B,IAAZA,EAAW,EAAXA,QACd,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAiBC,EAAjB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,IAAA,6CAC6CL,EAD7C,sDAEGM,MAAK,SAAAC,GACJJ,EAAQI,EAASC,KAAKC,KACvB,IACAC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EACf,GACJ,GAAE,CAACX,KAGF,4BACE,eAAIa,UAAWC,EAAf,kBACCZ,EAASa,OAAS,GACjB,eAAIF,UAAWC,EAAf,SACGZ,EAASc,KAAI,SAAAC,GAAK,OACjB,gBAAmBJ,UAAWC,EAA9B,WACE,gBACEI,IAAG,0CAAqCD,EAAME,cAC9CC,IAAKH,EAAMI,KACXR,UAAWC,KAEb,eAAID,UAAWC,EAAf,SAAkCG,EAAMI,QACxC,cAAGR,UAAWC,EAAd,SAAsCG,EAAMK,cAPrCL,EAAMM,GADE,OAarB,cAAGV,UAAWC,EAAd,8BAIP,C,4HCzCD,GAAgB,WAAa,gCAAgC,WAAa,gCAAgC,SAAW,8BAA8B,gBAAgB,mCAAmC,cAAc,iCAAiC,eAAe,kCAAkC,iBAAiB,oCAAoC,OAAS,4BAA4B,aAAa,gCAAgC,KAAO,0BAA0B,KAAO,0BAA0B,UAAY,+BAA+B,QAAU,6BAA6B,OAAS,4BAA4B,cAAgB,mCAAmC,WAAa,gCAAgC,QAAU,6BAA6B,eAAiB,oCAAoC,cAAgB,oC,kBCiGlzB,MA1FA,WAAyB,IAAD,IACdd,GAAYwB,EAAAA,EAAAA,MAAZxB,QACFyB,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEjB,GAAwC3B,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAO4B,EAAP,KAAqBC,EAArB,KACA,GAAkC7B,EAAAA,EAAAA,UAAS,MAA3C,eAAO8B,EAAP,KAAkBC,EAAlB,KACA,GAA0C/B,EAAAA,EAAAA,WAAS,GAAnD,eAAOgC,EAAP,KAAsBC,EAAtB,KACA,GAAgDjC,EAAAA,EAAAA,WAAS,GAAzD,eAAOkC,EAAP,KAAyBC,EAAzB,KAoCA,OAlCAhC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,IAAA,6CAC6CL,EAD7C,8CAEGM,MAAK,SAAAC,GACJuB,EAAgBvB,EAASC,MACzBwB,EAAaK,KAAKC,MAAM/B,EAASC,KAAK+B,cACvC,IACA7B,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EACf,GACJ,GAAE,CAACX,KAyBF,iBAAKa,UAAWC,EAAAA,iBAAhB,WACE,SAAC,KAAD,CAAMD,UAAWC,EAAAA,OAAe0B,GAAE,iBAAEf,QAAF,IAAEA,GAAF,UAAEA,EAAUgB,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,IAA7D,sBAGA,4BACE,SAAC,KAAD,CAASF,GAAG,IAAI3B,UAAWC,EAAAA,QAAgB6B,gBAAiB7B,EAAAA,OAA5D,mBACA,SAAC,KAAD,CAAS0B,GAAG,UAAU3B,UAAS,UAAKC,EAAAA,cAAL,YAA6BW,EAASmB,WAAT,kBAAiC5C,GAAYc,EAAAA,OAAgB,IAAM6B,gBAAiB7B,EAAAA,OAAhJ,wBAGF,eAAID,UAAWC,EAAAA,eAAf,SAAuCe,EAAagB,OAAS,4BAC5DhB,EAAaiB,aACZ,gBACE5B,IAAG,0CAAqCW,EAAaiB,aACrD1B,IAAKS,EAAagB,MAClBhC,UAAWC,EAAAA,mBAGb,gBAAKD,UAAWC,EAAAA,QAAhB,6BAEF,cAAGD,UAAWC,EAAAA,kBAAd,SAAyCe,EAAakB,UAAY,wBAClE,eAAGlC,UAAWC,EAAAA,OAAd,qBACWe,EAAamB,QAAUnB,EAAamB,OAAOjC,OAAS,EACzDc,EAAamB,OAAOhC,KAAI,SAAAiC,GAAK,OAAIA,EAAM5B,IAAV,IAAgB6B,KAAK,OAClD,iBAAMrC,UAAWC,EAAAA,eAAjB,iCAES,OAAdiB,IACC,eAAGlB,UAAWC,EAAAA,cAAd,yBAAiDiB,MAEnD,4BACE,mBAAQlB,UAAWC,EAAAA,KAAgBqC,QApDZ,WAC3BjB,GAAkBD,GAClBG,GAAoB,GAKlBT,EAHGM,EAGM,WAAD,OAAYjC,GAFX,SAEsB,CAAEoD,SAAS,GAE7C,EA2CK,SACGnB,EAAgB,YAAc,eAEjC,mBAAQpB,UAAWC,EAAAA,KAAgBqC,QA5CT,WAC9Bf,GAAqBD,GACrBD,GAAiB,GAKfP,EAHGQ,EAGM,WAAD,OAAYnC,GAFX,YAEsB,CAAEoD,SAAS,GAE7C,EAmCK,SACGjB,EAAmB,eAAiB,qBAIzC,UAAC,KAAD,YACE,SAAC,KAAD,CAAOkB,KAAK,OAAOC,SAAS,SAACC,EAAA,QAAD,CAAMvD,QAASA,OAC3C,SAAC,KAAD,CAAOqD,KAAK,UAAUC,SAAS,SAACE,EAAA,QAAD,CAASxD,QAASA,WAIxD,C,qEC1DD,UAnCA,YAA+B,IAAZA,EAAW,EAAXA,QACjB,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOwD,EAAP,KAAmBC,EAAnB,KAeA,OAbAtD,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,IAAA,6CAC6CL,EAD7C,sDAEGM,MAAK,SAAAC,GACJK,QAAQ+C,IAAI,gBAAiBpD,EAASC,MACtCkD,EAAcnD,EAASC,KAAKoD,QAC7B,IACAlD,OAAM,SAAAC,GACLC,QAAQD,MAAM,0BAA2BA,EAC1C,GACJ,GAAE,CAACX,KAIF,4BACE,oCACCyD,EAAW1C,OAAS,GACnB,wBACG0C,EAAWzC,KAAI,SAAA6C,GAAM,OACpB,2BACE,uBAAIA,EAAOC,WACX,oCAAYD,EAAOE,YAFZF,EAAOtC,GADI,OAQxB,+CAIP,C","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.js","webpack://react-homework-template/./src/components/MovieDetail.module.css?5c21","components/MovieDetails.js","components/Reviews.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castTitle\":\"Cast_castTitle__eoJbw\",\"castList\":\"Cast_castList__ARoWn\",\"castItem\":\"Cast_castItem__-Jcfe\",\"actorImage\":\"Cast_actorImage__IECZO\",\"actorName\":\"Cast_actorName__XabVA\",\"actorCharacter\":\"Cast_actorCharacter__m+TBZ\",\"notFound\":\"Cast_notFound__SweOj\"};","\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport styles from './Cast.module.css'; \n\nfunction Cast({ movieId }) {\n  const [castList, setCast] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=b1d75cfaae6b922289a72c3eab080e3a`)\n      .then(response => {\n        setCast(response.data.cast);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2 className={styles.castTitle}>Cast</h2>\n      {castList.length > 0 ? (\n        <ul className={styles.castList}>\n          {castList.map(actor => (\n            <li key={actor.id} className={styles.castItem}>\n              <img\n                src={`https://image.tmdb.org/t/p/w200/${actor.profile_path}`}\n                alt={actor.name}\n                className={styles.actorImage}\n              />\n              <h3 className={styles.actorName}>{actor.name}</h3>\n              <p className={styles.actorCharacter}>{actor.character}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p className={styles.notFound}>No cast found.</p>\n      )}\n    </div>\n  );\n}\n\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"activelink\":\"MovieDetail_activelink__mfmKb\",\"activeLink\":\"MovieDetail_activeLink__ZiUii\",\"homeLink\":\"MovieDetail_homeLink__fH8q6\",\"movie-details\":\"MovieDetail_movie-details__MCbz5\",\"movie-title\":\"MovieDetail_movie-title__ztuUK\",\"movie-poster\":\"MovieDetail_movie-poster__I7EO3\",\"movie-overview\":\"MovieDetail_movie-overview__9dyId\",\"genres\":\"MovieDetail_genres__yqk3I\",\"user-score\":\"MovieDetail_user-score__QFmSP\",\"link\":\"MovieDetail_link__OzcLz\",\"hide\":\"MovieDetail_hide__BjusD\",\"container\":\"MovieDetail_container__DcIto\",\"navLink\":\"MovieDetail_navLink__Nx7Qd\",\"active\":\"MovieDetail_active__eBpnY\",\"movieListItem\":\"MovieDetail_movieListItem__QTS3n\",\"movieImage\":\"MovieDetail_movieImage__avaeN\",\"noImage\":\"MovieDetail_noImage__1jWmm\",\"genresNotFound\":\"MovieDetail_genresNotFound__wKZo7\",\"activeNavLink\":\"MovieDetail_activeNavLink__f63iM\"};","import React, { useEffect, useState } from 'react';\nimport { Link, useParams, useNavigate, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport Reviews from 'components/Reviews';\nimport { Route, Routes, NavLink } from 'react-router-dom';\nimport styles from 'components/MovieDetail.module.css';\nimport Cast from './Cast/Cast';\n\nfunction MovieDetails() {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const [movieDetails, setMovieDetails] = useState({});\n  const [userScore, setUserScore] = useState(null);\n  const [isCastVisible, setIsCastVisible] = useState(false);\n  const [isReviewsVisible, setIsReviewsVisible] = useState(false);\n\n  useEffect(() => {\n    axios\n      .get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=b1d75cfaae6b922289a72c3eab080e3a`)\n      .then(response => {\n        setMovieDetails(response.data);\n        setUserScore(Math.floor(response.data.vote_average));\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, [movieId]);\n\n  const toggleCastVisibility = () => {\n    setIsCastVisible(!isCastVisible);\n    setIsReviewsVisible(false);\n\n    if (!isCastVisible) {\n      navigate(`./cast`, { replace: true });\n    } else {\n      navigate(`/movies/${movieId}`, { replace: true });\n    }\n  };\n\n  const toggleReviewsVisibility = () => {\n    setIsReviewsVisible(!isReviewsVisible);\n    setIsCastVisible(false);\n\n    if (!isReviewsVisible) {\n      navigate(`./reviews`, { replace: true });\n    } else {\n      navigate(`/movies/${movieId}`, { replace: true });\n    }\n  };\n\n  return (\n    <div className={styles['movie-details']}>\n      <Link className={styles.goBack} to={location?.state?.from ?? '/'}>\n        Go Back\n      </Link>\n      <div>\n        <NavLink to=\"/\" className={styles.navLink} activeClassName={styles.active}>Home</NavLink>\n        <NavLink to=\"/movies\" className={`${styles.activeNavLink} ${location.pathname === `/movies/${movieId}` ? styles.active : ''}`} activeClassName={styles.active}>Movies</NavLink>\n      </div>\n\n      <h2 className={styles['movie-title']}>{movieDetails.title || 'Movie Details Not Found'}</h2>\n      {movieDetails.poster_path ? (\n        <img\n          src={`https://image.tmdb.org/t/p/w500/${movieDetails.poster_path}`}\n          alt={movieDetails.title}\n          className={styles['movie-poster']}\n        />\n      ) : (\n        <div className={styles.noImage}>No Image Found</div>\n      )}\n      <p className={styles['movie-overview']}>{movieDetails.overview || 'Overview Not Found'}</p>\n      <p className={styles['genres']}>\n        Genres: {movieDetails.genres && movieDetails.genres.length > 0\n          ? movieDetails.genres.map(genre => genre.name).join(', ')\n          : <span className={styles.genresNotFound}>Genres Not Found</span>}\n      </p>\n      {userScore !== null && (\n        <p className={styles['user-score']}>User Score: {userScore}</p>\n      )}\n      <div>\n        <button className={styles['link']} onClick={toggleCastVisibility}>\n          {isCastVisible ? 'Hide Cast' : 'Show Cast'}\n        </button>\n        <button className={styles['link']} onClick={toggleReviewsVisibility}>\n          {isReviewsVisible ? 'Hide Reviews' : 'Show Reviews'}\n        </button>\n      </div>\n\n      <Routes>\n        <Route path=\"cast\" element={<Cast movieId={movieId} />} />\n        <Route path=\"reviews\" element={<Reviews movieId={movieId} />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default MovieDetails;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction Reviews({ movieId }) {\n  const [reviewList, setReviewList] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=b1d75cfaae6b922289a72c3eab080e3a`)\n      .then(response => {\n        console.log('API Response:', response.data);\n        setReviewList(response.data.results);\n      })\n      .catch(error => {\n        console.error('Error fetching reviews:', error);\n      });\n  }, [movieId]);\n  \n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      {reviewList.length > 0 ? (\n        <ul>\n          {reviewList.map(review => (\n            <li key={review.id}>\n              <p>{review.content}</p>\n              <p>Author: {review.author}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No reviews found.</p>\n      )}\n    </div>\n  );\n}\n\nexport default Reviews;\n"],"names":["movieId","useState","castList","setCast","useEffect","axios","then","response","data","cast","catch","error","console","className","styles","length","map","actor","src","profile_path","alt","name","character","id","useParams","location","useLocation","navigate","useNavigate","movieDetails","setMovieDetails","userScore","setUserScore","isCastVisible","setIsCastVisible","isReviewsVisible","setIsReviewsVisible","Math","floor","vote_average","to","state","from","activeClassName","pathname","title","poster_path","overview","genres","genre","join","onClick","replace","path","element","Cast","Reviews","reviewList","setReviewList","log","results","review","content","author"],"sourceRoot":""}