{"version":3,"file":"static/js/357.b2cc27dd.chunk.js","mappings":"8LAsCA,UAjCA,SAAgBA,GACd,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAmBC,EAAnB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAYR,OAVAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,IAAA,4CAA+CH,EAA/C,8CACGI,MAAK,SAAAC,GACJN,EAAUM,EAASC,KAAKC,QACzB,IACAC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EACf,GACJ,GAAE,CAACT,KAGF,4BACE,oCACCF,EAAWa,OAAS,GACnB,wBACGb,EAAWc,KAAI,SAAAC,GAAM,OACpB,2BACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFJF,EAAOG,GADI,OAQxB,+CAIP,C","sources":["components/Reviews.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nimport { useParams } from 'react-router-dom';\n\nfunction Review(props) {\n  const [reviewData, setReview] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    axios.get(`/movies/get-movie-reviews?movieId=${movieId}&api_key=b1d75cfaae6b922289a72c3eab080e3a`)\n      .then(response => {\n        setReview(response.data.results);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      {reviewData.length > 0 ? (\n        <ul>\n          {reviewData.map(review => (\n            <li key={review.id}>\n              <h3>{review.author}</h3>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No reviews found.</p>\n      )}\n    </div>\n  );\n}\n\nexport default Review;\n"],"names":["props","useState","reviewData","setReview","movieId","useParams","useEffect","axios","then","response","data","results","catch","error","console","length","map","review","author","content","id"],"sourceRoot":""}