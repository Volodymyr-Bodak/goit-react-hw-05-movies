{"version":3,"file":"static/js/357.f656d78b.chunk.js","mappings":"qLA0CA,UAtCA,SAAgBA,GACd,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EAAUJ,EAAMK,MAAMC,OAAOF,QAYnC,OAVAG,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,IAAA,4CAA+CJ,EAA/C,8CACGK,MAAK,SAAAC,GACJP,EAAUO,EAASC,KAAKC,QACzB,IACAC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EACf,GACJ,GAAE,CAACV,KAGF,4BACE,qCACA,wBACGF,EAAWc,KAAI,SAAAC,GAAM,OACpB,2BACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFJF,EAAOG,GADI,QAS7B,C","sources":["components/Reviews.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\n\nfunction Review(props) {\n  const [reviewData, setReview] = useState([]);\n\n  const movieId = props.match.params.movieId;\n\n  useEffect(() => {\n    axios.get(`/movies/get-movie-reviews?movieId=${movieId}&api_key=b1d75cfaae6b922289a72c3eab080e3a`)\n      .then(response => {\n        setReview(response.data.results);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      <ul>\n        {reviewData.map(review => (\n          <li key={review.id}>\n            <h3>{review.author}</h3>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nReview.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      movieId: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired\n};\n\nexport default Review;\n"],"names":["props","useState","reviewData","setReview","movieId","match","params","useEffect","axios","then","response","data","results","catch","error","console","map","review","author","content","id"],"sourceRoot":""}