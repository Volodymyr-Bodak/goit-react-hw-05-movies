{"version":3,"file":"static/js/357.b2681855.chunk.js","mappings":"qLAoCA,UAjCA,YAA+B,IAAZA,EAAW,EAAXA,QACjB,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,IAAA,6CAC6CL,EAD7C,sDAEGM,MAAK,SAAAC,GACJJ,EAAcI,EAASC,KAAKC,QAC7B,IACAC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EACf,GACJ,GAAE,CAACX,KAGF,4BACE,oCACCE,EAAWW,OAAS,GACnB,wBACGX,EAAWY,KAAI,SAAAC,GAAM,OACpB,2BACE,uBAAIA,EAAOC,WACX,oCAAYD,EAAOE,YAFZF,EAAOG,GADI,OAQxB,+CAIP,C","sources":["components/Reviews.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction Reviews({ movieId }) {\n  const [reviewList, setReviewList] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=b1d75cfaae6b922289a72c3eab080e3a`)\n      .then(response => {\n        setReviewList(response.data.results);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      {reviewList.length > 0 ? (\n        <ul>\n          {reviewList.map(review => (\n            <li key={review.id}>\n              <p>{review.content}</p>\n              <p>Author: {review.author}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No reviews found.</p>\n      )}\n    </div>\n  );\n}\n\nexport default Reviews;\n"],"names":["movieId","useState","reviewList","setReviewList","useEffect","axios","then","response","data","results","catch","error","console","length","map","review","content","author","id"],"sourceRoot":""}