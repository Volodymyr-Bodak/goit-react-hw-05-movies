{"version":3,"file":"static/js/703.66a170f3.chunk.js","mappings":"mOACA,GAAgB,WAAa,2BAA2B,WAAa,2BAA2B,SAAW,yBAAyB,gBAAgB,8BAA8B,cAAc,4BAA4B,eAAe,6BAA6B,iBAAiB,+BAA+B,OAAS,uBAAuB,aAAa,2BAA2B,KAAO,qBAAqB,KAAO,qBAAqB,UAAY,0BAA0B,QAAU,wBAAwB,OAAS,uBAAuB,UAAY,0BAA0B,UAAY,0BAA0B,cAAgB,8BAA8B,WAAa,2BAA2B,WAAa,2BAA2B,cAAgB,8BAA8B,cAAgB,+B,SCqExyB,MAjEA,WACE,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,EAAc,IAAIC,gBAAgBH,EAASI,QAAQC,IAAI,UAE7D,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAsCF,EAAAA,EAAAA,UAASJ,GAAe,IAA9D,eAAOO,EAAP,KAAoBC,EAApB,KAwBA,OAtBAC,EAAAA,EAAAA,YAAU,WACJF,EACFG,EAAAA,EAAAA,IAAA,mGAAsGH,IACnGI,MAAK,SAAAC,GACJN,EAAUM,EAASC,KAAKC,QACzB,IACAC,OAAM,SAAAC,GACLC,QAAQD,MAAM,yBAA0BA,EACzC,IAEHV,EAAU,GAEb,GAAE,CAACC,KAWF,iBAAKW,UAAWC,EAAAA,UAAhB,WACE,4BACE,SAAC,KAAD,CAASC,GAAG,IAAIF,UAAWC,EAAAA,QAAgBE,gBAAiBF,EAAAA,OAA5D,mBACA,SAAC,KAAD,CAASC,GAAG,UAAUF,UAAWC,EAAAA,cAAsBE,gBAAiBF,EAAAA,OAAxE,wBAEF,2CACA,iBAAMD,UAAWC,EAAAA,UAAjB,UACE,kBAAOG,KAAK,OAAOC,MAAOhB,EAAaiB,SAhBxB,SAACC,GACpBA,EAAMC,iBACN,IAAMC,EAAiBF,EAAMG,OAAOL,MACpCf,EAAemB,GAEf/B,EAAS,kBAAD,OAAmB+B,GAC5B,EAUoEE,YAAY,yBAE5ExB,EAAWyB,OAAS,IACnB,eAAIZ,UAAWC,EAAAA,UAAf,SACGd,EAAW0B,KAAI,SAAAC,GAAK,OACnB,eAAmBd,UAAWC,EAAAA,cAA9B,UACE,UAAC,KAAD,CACEc,MAAO,CAAEC,KAAMpC,GACfoB,UAAWC,EAAAA,KACXC,GAAE,kBAAaY,EAAMG,IAHvB,UAKGH,EAAMI,aACL,gBAAKC,IAAG,0CAAqCL,EAAMI,aAAeE,IAAKN,EAAMO,MAAOrB,UAAWC,EAAAA,cAE/F,gBAAKD,UAAWC,EAAAA,QAAhB,6BAEF,eAAID,UAAWC,EAAAA,WAAf,SAAmCa,EAAMO,SACzC,cAAGrB,UAAWC,EAAAA,cAAd,SAAqCa,EAAMQ,eAZtCR,EAAMG,GADI,QAqB9B,C","sources":["webpack://react-homework-template/./src/components/Movies/Movies.module.css?9f30","components/Movies/Movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"activelink\":\"Movies_activelink__Km4sf\",\"activeLink\":\"Movies_activeLink__lUuNH\",\"homeLink\":\"Movies_homeLink__x0YEH\",\"movie-details\":\"Movies_movie-details__0JPVJ\",\"movie-title\":\"Movies_movie-title__WFXV1\",\"movie-poster\":\"Movies_movie-poster__nC0Hf\",\"movie-overview\":\"Movies_movie-overview__OW7yb\",\"genres\":\"Movies_genres__aT5pP\",\"user-score\":\"Movies_user-score__li3jl\",\"link\":\"Movies_link__0oDWE\",\"hide\":\"Movies_hide__Cuh2L\",\"container\":\"Movies_container__sNK5N\",\"navLink\":\"Movies_navLink__glUdk\",\"active\":\"Movies_active__0kNC-\",\"searchBox\":\"Movies_searchBox__lw1+M\",\"movieList\":\"Movies_movieList__3O+kj\",\"movieListItem\":\"Movies_movieListItem__CpoY0\",\"movieImage\":\"Movies_movieImage__7C3bK\",\"movieTitle\":\"Movies_movieTitle__5wMIS\",\"movieOverview\":\"Movies_movieOverview__27S7H\",\"activeNavLink\":\"Movies_activeNavLink__7fl+H\"};","import React, { useEffect, useState } from 'react';\nimport { Link, NavLink, useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport styles from 'components/Movies/Movies.module.css';\n\nfunction Movies() {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const searchParam = new URLSearchParams(location.search).get('search');\n  \n  const [moviesData, setMovies] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(searchParam || '');\n\n  useEffect(() => {\n    if (searchQuery) {\n      axios.get(`https://api.themoviedb.org/3/search/movie?api_key=b1d75cfaae6b922289a72c3eab080e3a&query=${searchQuery}`)\n        .then(response => {\n          setMovies(response.data.results);\n        })\n        .catch(error => {\n          console.error('Error fetching movies:', error);\n        });\n    } else {\n      setMovies([]); \n    }\n  }, [searchQuery]);\n\n  const handleSearch = (event) => {\n    event.preventDefault();\n    const newSearchQuery = event.target.value;\n    setSearchQuery(newSearchQuery);\n\n    navigate(`/movies?search=${newSearchQuery}`);\n  };\n\n  return (\n    <div className={styles.container}>\n      <div>\n        <NavLink to=\"/\" className={styles.navLink} activeClassName={styles.active}>Home</NavLink>\n        <NavLink to=\"/movies\" className={styles.activeNavLink} activeClassName={styles.active}>Movies</NavLink>\n      </div>\n      <h2>Search Movies</h2>\n      <form className={styles.searchBox}>\n        <input type=\"text\" value={searchQuery} onChange={handleSearch} placeholder=\"Search for a movie\" />\n      </form>\n      {moviesData.length > 0 && (\n        <ul className={styles.movieList}>\n          {moviesData.map(movie => (\n            <li key={movie.id} className={styles.movieListItem}>\n              <Link\n                state={{ from: location }}\n                className={styles.item}\n                to={`/movies/${movie.id}`}\n              >\n                {movie.poster_path ? (\n                  <img src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`} alt={movie.title} className={styles.movieImage} />\n                ) : (\n                  <div className={styles.noImage}>No Image Found</div>\n                )}\n                <h3 className={styles.movieTitle}>{movie.title}</h3>\n                <p className={styles.movieOverview}>{movie.overview}</p>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default Movies;\n"],"names":["navigate","useNavigate","location","useLocation","searchParam","URLSearchParams","search","get","useState","moviesData","setMovies","searchQuery","setSearchQuery","useEffect","axios","then","response","data","results","catch","error","console","className","styles","to","activeClassName","type","value","onChange","event","preventDefault","newSearchQuery","target","placeholder","length","map","movie","state","from","id","poster_path","src","alt","title","overview"],"sourceRoot":""}